{# 
	PM (15.12.2019) this script is used to generate the registration form
	the recipient address entered is only used if it is a valid email address 

	@since PM (20.12.2019) @deprecated but works well if the goal is validate an email address
	{% if THEME.registration_recipient matches '#^[\\w.%+-]+@[\\w.-]+\.[A-Za-z]{2,}$#' %}
#}

{% macro registration_response(response, class, data) %}
	{% set type = null %} {# the response type: success, error, ... #}
	{% set prefix = null %}
	
	{% if response|starts_with('deletion') %}
		{% set type = regex_replace(response, '/^deletion[_-]/', '') %}
		{% set prefix = 'deletion_' %}
	{% else %}
		{% set type = response %}
		{% set prefix = 'response_' %}
	{% endif %}
	

	{% if type == 'error' %}
		<section class="notification active error {{ class }}">
			{{ class == '' ? data[prefix ~ 'error'] : data[prefix ~ 'error']|t }}
		</section>
	{% else %}
		<section class="notification active {{ type }} {{ class }}">
			{% set type = regex_replace(type, '/-/', '_') %}
			{{ class == '' ? data[prefix ~ type] : data[prefix ~ type]|t }}
		</section>
	{% endif %}
{% endmacro %}

{% macro registration_form(class, theme, pages, data) %}
	<section id="registration" class="{{ class }}">
		{% set object = null %}
		{% set regex = '/\\[([^\\[\\]]+)\\]/' %}
		{% set replacer = '<span class="button button-underline" data-target="privacy_policy">$1</span>' %}

		{% if theme.privacy_policy_page %} {# TRUE if the page selection is NOT empty #}
			{% for page in pages.children if object is null %}
				
				{% if page.isPage and page.url(false, false, false, true) == theme.privacy_policy_page and page.header.title and page.content %}
					<div class="privacy-policy standalone">
						<div>
							<input id="privacy_policy_checkbox" type="checkbox" class="privacy-policy">
							<label for="privacy_policy_checkbox" class="checkbox"></label>
						</div>
						<div>{{ page.header.title|regex_replace(regex, replacer) }}</div> {# wrap & highlight the term #}
					</div>
					{% set object = page %}
				{% endif %}

			{% endfor %}
		{% endif %}
		{# SHOULD NOT MERGE #}
		{% if theme.privacy_policy_inline and object is null %} {# TRUE if the inline selection is NOT empty #}
			{% for inline in theme.privacy_policy_inline if object is null %}
					
				{% if language == inline.language and inline.title and inline.content %} {# TRUE if the language matched #}
					<div class="privacy-policy inline">
						<div>
							<input id="privacy_policy_checkbox" type="checkbox" class="privacy-policy">
							<label for="privacy_policy_checkbox" class="checkbox"></label>
						</div>
						<div>{{ inline.title|regex_replace(regex, replacer) }}</div> {# wrap & highlight the term #}
					</div>
					{% set object = inline %}
				{% endif %}

			{% endfor %}
		{% endif %}

		<div class="fields">
			<input type="text" class="name" placeholder="{{ 'THEME_UPMORPH_ONSO.NAME'|t }}" autocomplete="off">
			{% if class == '' %}
				<input type="email" class="email" placeholder="{{ data.email }}" autocomplete="off">
				<button type="button" {{ object is null ? '' : 'disabled' }}>{{ data.button }}</button>
			{% else %} {# default behaviour #}
				<input type="email" class="email" placeholder="{{ data.email|t }}" autocomplete="off">
				<button type="button" {{ object is null ? '' : 'disabled' }}>{{ data.button|t }}</button>
			{% endif %}
		</div>
	</section>

	{% set keys = ['progress', 'success', 'exists', 'error'] %}
	{% if class == '' %}
		{% for key in keys %}
			<section class="notification {{ key }}">
				{{ data['notification_' ~ key] }}
			</section>
		{% endfor %}
	{% else %} {# default behaviour #}
		{% for key in keys %}
			<section class="notification {{ key }}">
				{{ data['notification_' ~ key]|t }}
			</section>
		{% endfor %}
	{% endif %}
{% endmacro %}


{% set notification = uri.query('registration') %}
{% set object = null %}
{% import _self as macros %}

{% if notification %}
	{% for registration in THEME.registration_texts if object is null %} {# TRUE if the inline selection is NOT empty #}
		{% if LANG == registration.language %}
			{{ macros.registration_response(notification, '', registration) }}
			{% set object = registration %}
		{% endif %}
	{% endfor %}
	{% if object is null %} {# default behaviour #}
		{{ macros.registration_response(notification, SLUG, THEME.registration_texts_def) }}
	{% endif %}
{% elseif THEME.registration_status and THEME.registration_recipients %}
	{# DO NOT MERGE #}
	{% for registration in THEME.registration_texts if object is null %} {# TRUE if the inline selection is NOT empty #}
		{% if LANG == registration.language %}
			{{ macros.registration_form('', theme, pages, registration) }}
			{% set object = registration %}
		{% endif %}
	{% endfor %}
	{% if object is null %} {# default behaviour #}
		{{ macros.registration_form(SLUG, theme, pages, THEME.registration_texts_def) }}
	{% endif %}
{% endif %}